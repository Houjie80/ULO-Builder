#
# Copyright (C) 2024 nosignals
#
name: ULO 

on:
  workflow_dispatch:
    inputs:
      kernel:
        description: 'Kernel Version (ex. 6.6.6, 6.1.31-localversion)'
        required: true
        default: '6.6.6'
        type: string
      devices:
        description: "Devices"
        required: true
        default: "s905x"
        type: choice
        options:
          - s905x
          - s905x2
          - s905x3
          - s905x4
          - h5-orangepi-zeroplus2
          - h5-orangepi-zeroplus
          - h5-orangepi-prime
          - h5-orangepi-pc2
          - h6-orangepi-lite2
          - h6-orangepi-1plus
          - h6-orangepi-3
          - h6-orangepi-3lts
          - h616-orangepi-zero2
          - h618-orangepi-zero2w
          - h618-orangepi-zero3
          - rk3566-orangepi-3b
          - rk3588-orangepi-5plus
          - rk3588s-orangepi-5
      rootfs:
        description: 'ROOTFS File (ex. ImmortalWrt-21-02-7-rootfs.tar.gz)'
        required: true
        default: 'ImmortalWrt-21-02-7-rootfs.tar.gz'
        type: string
      rootfs_size:
        description: "ROOTFS Size, min 640 (756, 1024, 2048, etc)"
        required: true
        default: '1024'
        type: string
      fwinfo:
        description: 'Firmware Information'
        required: true
        default: 'your custom information at release pages'
        type: string

jobs: 
  build_ipk:
    permissions:
      contents: write
    strategy:
      matrix:
        kernel: [5.4.279,]
        devices: [s905x4]
    name: ULO 
    runs-on: ubuntu-latest
    steps:
      
      - name: Cleanup and Installing Prerequisites
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E apt-get update
          sudo -E apt-get -y install lolcat build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo pip3 install gdown
          sudo pip3 install git+https://github.com/Juvenal-Yescas/mediafire-dl
         # wget https://mega.nz/linux/repo/xUbuntu_24.04/amd64/megacmd-xUbuntu_24.04_amd64.deb && sudo apt install "$PWD/megacmd-xUbuntu_24.04_amd64.deb"
                    
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Download ROOTFS via link
        run: |
          if [ $(echo ${{ inputs.rootfs_url }} | grep "drive.") ]; then
            if [ $(echo ${{ inputs.rootfs_url }} | awk -F "/" '{print $6}') ]; then
              link_gdrive=$(echo ${{ inputs.rootfs_url }} | awk -F "/" '{print $6}')
            else
              link_gdrive=$(echo ${{ inputs.rootfs_url }} | awk -F "/" '{print $4}' | awk -F "?id=" '{print $2}'|awk -F "&export" '{print $1}')
            fi
          sudo gdown ${link_gdrive} -O ./rootfs/rootfs.tar.gz
          else
            if [ $(echo ${{ inputs.rootfs_url }} | grep "mediafire.com") ]; then
             sudo mediafire-dl ${{ inputs.rootfs_url }} ./rootfs
             else
              if [ $(echo ${{ inputs.rootfs_url }} | grep "mega.nz") ]; then
                file_mega=$(sudo mega-get ${{ inputs.rootfs_url }} | awk -F: '{print $2}')
               sudo mv ${file_mega} ./rootfs
              else
                sudo wget -q --no-check-certificate ${{ inputs.rootfs_url }} -P ./rootfs
              fi
            fi
          fi
        
      - name: Building OpenWrt
        run: |
          sudo ./${{ inputs.version }} -k ${{ matrix.kernel }} -m ${{ matrix.devices }} -s 1024
          
      - name: Creating Package Artifact
        run: |
          mkdir -p ./artifact
          cp -rf ./out/${{ matrix.devices }}/* ./artifact/
          
      - name: Delivering Package
        uses: actions/upload-artifact@v2
        with:
          name: openwrt_package
          path: ./artifact/*

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/*
          tag: ${{ github.ref }}
          file_glob: true
          body: |
            ## OpenWRT AT01/AX810 Release
            Kernel :
            - 5.4.125 | Wifi On - Unisoc
            - 5.4.279 | Wifi On - Realtek
            - 5.4.265 | Wifi On - Unisoc
         
